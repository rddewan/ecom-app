def keyProperties = new Properties()
def keyPropertiesFile = rootProject.file('key.properties')
if (keyPropertiesFile.exists()) {
    keyPropertiesFile.withReader('UTF-8') { reader ->
        keyProperties.load(reader)
    }
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {

    signingConfigs {
        debug {
            keyAlias keyProperties['dev.keyAlias']
            keyPassword keyProperties['dev.keyPassword']
            storeFile keyProperties['dev.storeFile'] ? file(keyProperties['dev.storeFile']) : null
            storePassword keyProperties['dev.storePassword']   
        }
        qa {
            keyAlias keyProperties['qa.keyAlias']
            keyPassword keyProperties['qa.keyPassword']
            storeFile keyProperties['qa.storeFile'] ? file(keyProperties['dev.storeFile']) : null
            storePassword keyProperties['dev.storePassword']   
        }
        uat {
            keyAlias keyProperties['uat.keyAlias']
            keyPassword keyProperties['uat.keyPassword']
            storeFile keyProperties['uat.storeFile'] ? file(keyProperties['dev.storeFile']) : null
            storePassword keyProperties['uat.storePassword']   
        }
        release {
            keyAlias keyProperties['prod.keyAlias']
            keyPassword keyProperties['prod.keyPassword']
            storeFile keyProperties['prod.storeFile'] ? file(keyProperties['dev.storeFile']) : null
            storePassword keyProperties['prod.storePassword']   
        }
    }

    // ----- BEGIN flavorDimensions (autogenerated by flutter_flavorizr) -----
    flavorDimensions "flavor"

    productFlavors {
        dev {
            dimension "flavor"
            applicationId "dev.rdewan.ecomApp"
            applicationIdSuffix ".development"
            versionNameSuffix "Dev"
            signingConfig signingConfigs.debug
            resValue "string", "app_name", "EcomApp"
        }
        qa {
            dimension "flavor"
            applicationId "dev.rdewan.ecom_app"
            applicationIdSuffix ".qa"
            versionNameSuffix "QA"
            signingConfig signingConfigs.qa
            resValue "string", "app_name", "EcomApp"
        }
        uat {
            dimension "flavor"
            applicationId "dev.rdewan.ecom_app"
            applicationIdSuffix ".uat"
            versionNameSuffix "UAT"
            signingConfig signingConfigs.uat
            resValue "string", "app_name", "EcomApp"
        }
        prod {
            dimension "flavor"
            applicationId "dev.rdewan.ecom_app"
            signingConfig signingConfigs.release
            resValue "string", "app_name", "EcomApp"
        }
    }

    // ----- END flavorDimensions (autogenerated by flutter_flavorizr) -----

    

   compileSdkVersion flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "dev.rdewan.ecom_app"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-build-configuration.
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
